Learning to use git from the command line.

git clone {clone url} --> to clone a repository
git checkout -b {name of the branch} --> checksout a branch of same name,- option 'b' is for creating a new branch
git add {file name} --> adds untracked file to be tracked
git commit --> commits the changes on the local branch
git staus --> shows the current branch name, state of the tracked files and changes to be committed if any
git restore --staged {filename} --> to unstage a staged file
git branch -a --> lis all branches
git branch {name} --> creates a branch of the given namem without switching to it
git log --> shows the commit history of the currentt branch
git log branch1...branch2 --> *shows the commits in branch2 which are not in branch1
git push --set-upstream origin dev/Aries --> To push the current branch and set the remote as upstream
git diff --> shows unstaged changes between index and current working directory
git commit --amend --> amends new staged changes onto the previous commit without creating a new commit
	flags: --no-edit --> to not modify the commit message
	       -m {message} --> to give an updated committ message


going to learn how to rebase -- learning rebase (will probably throw conflict) -- did cause conflict
trying to rebase after commiting some changes in branch 1 

we will try to amend a commit after pushing the changes
lets ammend our las pushed commit now

lets try that 1 more time. lets go

this is how to do it :

git commit --amend --no-edit (if we don't want to edit the last commit message)
git push origin (branch name) -f or --force (should be carefully used rewrites commit history of remote)

SSH Commands:
Create an ssh key -> $ ssh-keygen -t ed25519 -C "ignaiousmj@gmail.com"
to change password for existing ssh key -> $ ssh-keygen -p -f ~/c/Users/ignatious.a/.ssh/id_ed25519

Trying out VIM editor inside gitbash
Press insert to enter into edit mode of the file
when done , cick ESC
to save and exit type :wq and press enter
